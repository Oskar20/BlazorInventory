@using Entities
@using Business


<hr />
<select class="form-control" @onchange="CategoryChanged">
    <option value="">Seleccione categoria</option>
    @foreach(var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryNmae</option>
    }
</select>
<hr />

<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Referencia</th>
            <th>Nombre producto</th>
            <th>Categoria</th>
            <th>Cantidad</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var product in Tmpproducts)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>@product.TotalQuantity</td>
                <td><a href="product/update/@product.ProductId">Editar</a></td>
            </tr>
        }

    </tbody>
</table>

@message


@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> Tmpproducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    string message;

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        Tmpproducts = products;
        categories = B_Category.CategoryList();
    }

    private  void CategoryChanged(ChangeEventArgs e)
    {
        //message = e.Value.ToString();
        Tmpproducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
    }


}
