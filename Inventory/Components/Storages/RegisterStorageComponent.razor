@using Entities
@using Business

@inject NavigationManager NavManager

<div>
    <EditForm Model="oStorage">
        <div class="form-group">
            <label>Bodega:</label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                @foreach (var warehouse in warehouses)
                {
                    <option value="@warehouse.WareHouseId">@warehouse.WareHouseName</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Producto:</label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                @foreach (var product in products)
                {
                    <option value="@product.ProductId">@product.ProductName</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <input type="button" value="Agregar Producto" @onclick="Save" class="form-control btn btn-dark" />
        </div>
    </EditForm>
</div>
<hr />
<div class="h3 text-center">
    @message
</div>
<hr />





@code {
    StorageEntity oStorage = new StorageEntity();
    private List<WareHouseEntity> warehouses = new List<WareHouseEntity>();
    private List<ProductEntity> products = new List<ProductEntity>();

    private string message;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_WareHouse.WareHouseList();
        products = B_Product.ProductList();
    }

    private void Save()
    {

        if (!string.IsNullOrEmpty(oStorage.WarehouseId) && !string.IsNullOrEmpty(oStorage.ProductId))
        {
            var id = $"{oStorage.WarehouseId}-{oStorage.ProductId}";

            if (!B_Storage.IsProductInWarehouse(id)) // Agregar esto al B_Storage
            {
                oStorage.StorageId = id;
                oStorage.LastUpdate = DateTime.Now;
                var saveStorage = B_Storage.CreateStorage(oStorage);

                message = $"El producto {saveStorage.Product.ProductName} se agregó {saveStorage.Warehouse.WareHouseName}";
            }
            else
            {
                var oldStorage = B_Storage.GetStorageById(id);
                message = $"El producto {oldStorage.Product.ProductName} ya se encuentra en a bodega {oldStorage.Warehouse.WareHouseName}";
            }
        }
        else
        {
            message = $"El producto {oStorage.ProductId} no pudo ser registrado";
        }

        //oStorage.WherehouseId = "";
        oStorage.ProductId = "";
    }

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
    }


}
